{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\CIFO\\\\\\xA0cifo\\xADfrontend\\xAD2024\\\\pla14\\\\rick-and-morty-pla\\\\src\\\\screens\\\\ListScreen.jsx\";\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Character from '../components/Character';\nimport localData from '../data/data.json';\nimport emptyData from '../data/empty.json';\nimport Colors from '../common/Colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListScreen = ({\n  navigation\n}) => {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setCharacters(localData.results);\n    };\n    fetchData();\n  }, []);\n  const separator = () => _jsxDEV(View, {\n    style: styles.separator\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 27\n  }, this);\n  if (characters.length === 0) return _jsxDEV(Text, {\n    children: \"No data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 39\n  }, this);\n  return _jsxDEV(FlatList, {\n    data: characters,\n    renderItem: ({\n      item\n    }) => _jsxDEV(Character, {\n      gender: item.gender,\n      image: item.image,\n      name: item.name,\n      species: item.species,\n      status: item.status,\n      onPress: () => navigation.navigate('Detail', {\n        id: item.id,\n        name: item.name\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this),\n    keyExtractor: item => item.id,\n    ItemSeparatorComponent: separator\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  nodataContainer: {},\n  nodataText: {},\n  separator: {\n    height: 0.6,\n    left: 16,\n    backgroundColor: Colors.primary\n  }\n});\nexport default ListScreen;","map":{"version":3,"names":["useEffect","useState","StyleSheet","FlatList","View","Text","Character","localData","emptyData","Colors","jsxDEV","_jsxDEV","ListScreen","navigation","characters","setCharacters","fetchData","results","separator","style","styles","fileName","_jsxFileName","lineNumber","columnNumber","length","children","data","renderItem","item","gender","image","name","species","status","onPress","navigate","id","keyExtractor","ItemSeparatorComponent","create","nodataContainer","nodataText","height","left","backgroundColor","primary"],"sources":["C:/Users/DELL/Documents/CIFO/ cifo­frontend­2024/pla14/rick-and-morty-pla/src/screens/ListScreen.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n// TODO #5\n// Afegeix tot el que calgui dins de les claus de l'import a la línia següent.\nimport {StyleSheet,FlatList,View,Text} from 'react-native'\nimport Character from '../components/Character'\nimport localData from '../data/data.json'\nimport emptyData from '../data/empty.json'\nimport Colors from '../common/Colors'\n\nconst ListScreen = ({ navigation }) => {\n  const [characters, setCharacters] = useState([])\n\n  // Data -- Using real API.\n  // const api = 'https://rickandmortyapi.com/api/character'\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const res = await fetch(api)\n  //     const data = await res.json()\n  //     setCharacters(data.results)\n  //   }\n  //   fetchData()\n  // }, [])\n\n  // Data -- Local file to prevent API calls.\n  useEffect(() => {\n    const fetchData = async () => {\n      setCharacters(localData.results)\n    }\n    fetchData()\n  }, [])\n\n  // Data -- Local file to test empty results.\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     setCharacters(emptyData.results)\n  //   }\n  //   fetchData()\n  // }, [])\n\n  const separator = () => <View style={styles.separator} />\n\n  // TODO #3\n  // Millora la UI que es mostra en cas de no rebre dades, aquest simple Text queda molt pobre.\n // Mejora la UI que se muestra en caso de no recibir datos, ese simple Texto queda muy pobre.\n  if (characters.length === 0) return <Text>No data</Text>\n\n  return (\n    <FlatList\n      data={characters}\n      renderItem={({ item }) => (\n        <Character\n          gender={item.gender}\n          image={item.image}\n          name={item.name}\n          species={item.species}\n          status={item.status}\n          \n\n\n          // TODO #4\n          // Revisa Character.jsx i afegeix aquí les props que manquen.\n          //Revisa Character.jsx y añade aquí las cercas que faltan.\n          //   image, name, species, status, onPress\n          onPress={() => navigation.navigate('Detail', { id: item.id, name: item.name })}\n        />\n      )}\n      keyExtractor={(item) => item.id}\n      ItemSeparatorComponent={separator}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  nodataContainer: {},\n  nodataText: {},\n  separator: {\n    height: 0.6,\n    left: 16,\n    backgroundColor: Colors.primary,\n  },\n})\n\nexport default ListScreen\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAI3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAchDD,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,aAAa,CAACR,SAAS,CAACU,OAAO,CAAC;IAClC,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAUN,MAAME,SAAS,GAAGA,CAAA,KAAMP,OAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACF;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAKzD,IAAIV,UAAU,CAACW,MAAM,KAAK,CAAC,EAAE,OAAOd,OAAA,CAACN,IAAI;IAAAqB,QAAA,EAAC;EAAO;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAExD,OACEb,OAAA,CAACR,QAAQ;IACPwB,IAAI,EAAEb,UAAW;IACjBc,UAAU,EAAEA,CAAC;MAAEC;IAAK,CAAC,KACnBlB,OAAA,CAACL,SAAS;MACRwB,MAAM,EAAED,IAAI,CAACC,MAAO;MACpBC,KAAK,EAAEF,IAAI,CAACE,KAAM;MAClBC,IAAI,EAAEH,IAAI,CAACG,IAAK;MAChBC,OAAO,EAAEJ,IAAI,CAACI,OAAQ;MACtBC,MAAM,EAAEL,IAAI,CAACK,MAAO;MAQpBC,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACuB,QAAQ,CAAC,QAAQ,EAAE;QAAEC,EAAE,EAAER,IAAI,CAACQ,EAAE;QAAEL,IAAI,EAAEH,IAAI,CAACG;MAAK,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CACD;IACFc,YAAY,EAAGT,IAAI,IAAKA,IAAI,CAACQ,EAAG;IAChCE,sBAAsB,EAAErB;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEN,CAAC;AAED,MAAMJ,MAAM,GAAGlB,UAAU,CAACsC,MAAM,CAAC;EAC/BC,eAAe,EAAE,CAAC,CAAC;EACnBC,UAAU,EAAE,CAAC,CAAC;EACdxB,SAAS,EAAE;IACTyB,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,EAAE;IACRC,eAAe,EAAEpC,MAAM,CAACqC;EAC1B;AACF,CAAC,CAAC;AAEF,eAAelC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}